// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/game/logs": {
            "get": {
                "description": "Retrieves chat and status logs for a game in reverse chronological order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "List session logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.GameSessionLog"
                            }
                        }
                    }
                }
            }
        },
        "/api/game/state": {
            "get": {
                "description": "Returns current game state tailored for the requesting user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "Get game state",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/game.StateResponse"
                        }
                    }
                }
            }
        },
        "/api/game/stream": {
            "get": {
                "description": "Streams session and state change events for a game",
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Stream game updates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "event stream",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/hello": {
            "get": {
                "description": "Simple hello world endpoint",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "Returns a greeting",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/version": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meta"
                ],
                "summary": "Get server version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "game.PlayerState": {
            "type": "object",
            "properties": {
                "cardCount": {
                    "type": "integer"
                },
                "cards": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "game.StateResponse": {
            "type": "object",
            "properties": {
                "gameId": {
                    "type": "string"
                },
                "hasStarted": {
                    "type": "boolean"
                },
                "players": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/game.PlayerState"
                    }
                },
                "requesterId": {
                    "type": "string"
                }
            }
        },
        "model.GameSessionLog": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "gameId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Donkey API",
	Description:      "API for the Donkey card game",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
